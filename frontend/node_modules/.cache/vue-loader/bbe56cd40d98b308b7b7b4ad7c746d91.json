{"remainingRequest":"C:\\Users\\User\\Documents\\JATU PLC\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Documents\\JATU PLC\\frontend\\src\\components\\tables\\UsersTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Documents\\JATU PLC\\frontend\\src\\components\\tables\\UsersTable.vue","mtime":1588709464000},{"path":"C:\\Users\\User\\Documents\\JATU PLC\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\JATU PLC\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\JATU PLC\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\JATU PLC\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKCiAgICBuYW1lOid1c2Vycy10YWJsZScsCgogICAgcHJvcHM6ewogICAgICAgIHVzZXJzOnt9CiAgICB9LAoKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKCiAgICAgICAgICAgIGZpZWxkczogW3sKICAgICAgICAgICAgICAgICAgICBrZXk6ICduYW1lJywKICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ0Z1bGwgbmFtZScsCiAgICAgICAgICAgICAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgc29ydERpcmVjdGlvbjogJ2Rlc2MnCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGtleTogJ3Bvc2l0aW9uJywKICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ1Bvc2l0aW9uJwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBrZXk6ICdlbWFpbCcsCiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICdFbWFpbCcKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAga2V5OiAnYWN0aW9ucycsCiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICdBY3Rpb25zJwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAvLyB0b3RhbFJvd3M6IDEsCiAgICAgICAgICAgIC8vIGN1cnJlbnRQYWdlOiAxLAogICAgICAgICAgICAvLyBwZXJQYWdlOiA1LAogICAgICAgICAgICAvLyBwYWdlT3B0aW9uczogW10sCiAgICAgICAgICAgIHNvcnRCeTogJycsCiAgICAgICAgICAgIHNvcnREZXNjOiBmYWxzZSwKICAgICAgICAgICAgc29ydERpcmVjdGlvbjogJ2FzYycsCiAgICAgICAgICAgIGZpbHRlcjogbnVsbCwKICAgICAgICAgICAgZmlsdGVyT246IFtdLAoKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBzb3J0T3B0aW9ucygpIHsKICAgICAgICAgICAgLy8gQ3JlYXRlIGFuIG9wdGlvbnMgbGlzdCBmcm9tIG91ciBmaWVsZHMKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmllbGRzCiAgICAgICAgICAgICAgICAuZmlsdGVyKGYgPT4gZi5zb3J0YWJsZSkKICAgICAgICAgICAgICAgIC5tYXAoZiA9PiB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogZi5sYWJlbCwKICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGYua2V5CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICAvLyBTZXQgdGhlIGluaXRpYWwgbnVtYmVyIG9mIGl0ZW1zCiAgICAgICAgdGhpcy50b3RhbFJvd3MgPSB0aGlzLnVzZXJzLmxlbmd0aAogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBvbkZpbHRlcmVkKGZpbHRlcmVkSXRlbXMpIHsKICAgICAgICAgICAgLy8gVHJpZ2dlciBwYWdpbmF0aW9uIHRvIHVwZGF0ZSB0aGUgbnVtYmVyIG9mIGJ1dHRvbnMvcGFnZXMgZHVlIHRvIGZpbHRlcmluZwogICAgICAgICAgICB0aGlzLnRvdGFsUm93cyA9IGZpbHRlcmVkSXRlbXMubGVuZ3RoCiAgICAgICAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxCiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["UsersTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UsersTable.vue","sourceRoot":"src/components/tables","sourcesContent":["<template>\n    <b-container fluid>\n        <!-- User Interface controls -->\n        <div class=\"users-table-filter-wrapper\">\n\n            <div class=\"table-filter-item d-flex justify-content-center\">\n                <b-form-group label-size=\"sm\" label-for=\"filterInput\" class=\"mb-0 w-100\">\n                    <b-input-group size=\"sm\">\n                        <b-form-input v-model=\"filter\" type=\"search\" id=\"filterInput\" placeholder=\"Search\">\n                        </b-form-input>\n                        <b-input-group-append>\n                            <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\n                        </b-input-group-append>\n                    </b-input-group>\n                </b-form-group>\n            \n\n            </div>\n        </div>\n        <hr class=\"w-100\">\n\n\n        <!-- Main table element -->\n        <b-table id=\"users-table\" show-empty small stacked=\"md\" :items=\"users\" :fields=\"fields\"\n            :current-page=\"currentPage\" :per-page=\"perPage\" :filter=\"filter\" :filterIncludedFields=\"filterOn\"\n            :sort-by.sync=\"sortBy\" :sort-desc.sync=\"sortDesc\" :sort-direction=\"sortDirection\" @filtered=\"onFiltered\">\n\n            <template v-slot:cell(name)=\"row\">\n                {{ row.value.first }} {{ row.value.middle }} {{ row.value.last }}\n            </template>\n\n            <template v-slot:cell(actions)=\"row\">\n                <b-button size=\"sm\" @click=\"row.toggleDetails\">\n                    {{ row.detailsShowing ? 'Hide' : 'Show' }} Details\n                </b-button>\n            </template>\n\n            <template v-slot:row-details=\"row\">\n                <b-card>\n                    <div class=\"card-body\">\n                        <div class=\"card-title font-weight-bold\">Details</div>\n                        <hr class=\"w-100\">\n                        <div class=\"\">\n                            <p class=\"card-text\">Name: {{ row.item.fullname }}</p>\n                            <p class=\"card-text\">Postion:{{ row.item.position }} </p>\n                            <p class=\"card-text\">Email: {{ row.item.email }}</p>\n                            <p class=\"card-text\">Mobile:\n                                <span v-for=\"(mobile, index) in row.item.mobile\" :key='index'>\n                                    {{ mobile }}, \n                                </span>\n                            </p>\n                            <p class=\"card-text\">Address: {{ row.item.address.region }}, {{ row.item.address.district }}, {{ row.item.address.ward }}</p>\n                            <p class=\"card-text\">Marital Status: {{ row.item.maritalStatus }}</p>\n                        </div>\n                    </div>\n                </b-card>\n            </template>\n        </b-table>\n\n        <!-- Info modal -->\n\n    </b-container>\n</template>\n\n<script>\n    export default {\n\n        name:'users-table',\n\n        props:{\n            users:{}\n        },\n\n        data() {\n            return {\n\n                fields: [{\n                        key: 'name',\n                        label: 'Full name',\n                        sortable: true,\n                        sortDirection: 'desc'\n                    },\n                    {\n                        key: 'position',\n                        label: 'Position'\n                    },\n                    {\n                        key: 'email',\n                        label: 'Email'\n                    },\n                    {\n                        key: 'actions',\n                        label: 'Actions'\n                    }\n                ],\n                // totalRows: 1,\n                // currentPage: 1,\n                // perPage: 5,\n                // pageOptions: [],\n                sortBy: '',\n                sortDesc: false,\n                sortDirection: 'asc',\n                filter: null,\n                filterOn: [],\n\n            }\n        },\n        computed: {\n            sortOptions() {\n                // Create an options list from our fields\n                return this.fields\n                    .filter(f => f.sortable)\n                    .map(f => {\n                        return {\n                            text: f.label,\n                            value: f.key\n                        }\n                    })\n            }\n        },\n        mounted() {\n            // Set the initial number of items\n            this.totalRows = this.users.length\n        },\n        methods: {\n            onFiltered(filteredItems) {\n                // Trigger pagination to update the number of buttons/pages due to filtering\n                this.totalRows = filteredItems.length\n                this.currentPage = 1\n            }\n        }\n    }\n</script>"]}]}