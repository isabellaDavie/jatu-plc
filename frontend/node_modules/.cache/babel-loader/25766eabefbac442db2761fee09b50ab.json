{"remainingRequest":"C:\\Users\\User\\Documents\\JATU PLC\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Documents\\JATU PLC\\frontend\\src\\api\\index.js","dependencies":[{"path":"C:\\Users\\User\\Documents\\JATU PLC\\frontend\\src\\api\\index.js","mtime":1587933282126},{"path":"C:\\Users\\User\\Documents\\JATU PLC\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\JATU PLC\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIHJlcXVlc3QgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICdodHRwOi8vbG9jYWxob3N0OjM1MDAnLAogIGhlYWRlcnM6IHsKICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIgLy8gYW55dGhpbmcgeW91IHdhbnQgdG8gYWRkIHRvIHRoZSBoZWFkZXJzCgogIH0KfSk7Cgp2YXIgdG9rZW4gPSBmdW5jdGlvbiB0b2tlbigpIHsKICByZXR1cm4gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyk7Cn07Cgp2YXIgYXV0aEludGVyY2VwdG9yID0gZnVuY3Rpb24gYXV0aEludGVyY2VwdG9yKGNvbmZpZykgewogIGNvbmZpZy5oZWFkZXJzWydBdXRob3JpemF0aW9uJ10gPSAiQmVhcmVyICIuY29uY2F0KHRva2VuKCkpOwogIHJldHVybiBjb25maWc7Cn07IC8vIHN0cmljdFJlcXVlc3QuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGF1dGhJbnRlcmNlcHRvcikKCgpleHBvcnQgZGVmYXVsdCByZXF1ZXN0Ow=="},{"version":3,"sources":["C:/Users/User/Documents/JATU PLC/frontend/src/api/index.js"],"names":["axios","request","create","baseURL","headers","token","localStorage","getItem","authInterceptor","config"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAC,uBADiB;AAEzBC,EAAAA,OAAO,EAAE;AACL,oBAAgB,kBADX,CAEL;;AAFK;AAFgB,CAAb,CAAhB;;AASA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAMC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAN;AAAA,CAAd;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAY;AAChCA,EAAAA,MAAM,CAACL,OAAP,CAAe,eAAf,qBAA4CC,KAAK,EAAjD;AACA,SAAOI,MAAP;AACH,CAHD,C,CAKA;;;AAGA,eAAeR,OAAf","sourcesContent":["import axios from 'axios';\n\nconst request = axios.create({\n    baseURL:'http://localhost:3500',\n    headers: {\n        \"Content-Type\": \"application/json\",\n        // anything you want to add to the headers\n    }\n});\n\n\nconst token = () => localStorage.getItem('token')\n\nconst authInterceptor = (config) => {\n    config.headers['Authorization'] = `Bearer ${token()}`\n    return config\n}\n\n// strictRequest.interceptors.request.use(authInterceptor)\n\n\nexport default request"]}]}